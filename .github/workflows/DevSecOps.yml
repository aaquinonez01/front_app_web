name: CI/CD para Frontend con Seguridad 

on:
  push:
    branches:
      - DevSecOps
  pull_request:
    branches:
      - DevSecOps
  workflow_dispatch:  # Permite ejecuci√≥n manual

permissions:
  contents: write  # Permiso necesario para hacer el merge

jobs:
  gitleaks:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout del c√≥digo
        uses: actions/checkout@v3

      - name: Instalar Gitleaks
        run: |
          curl -sSL https://github.com/zricethez/gitleaks/releases/latest/download/gitleaks-linux-amd64 -o gitleaks
          chmod +x gitleaks
          sudo mv gitleaks /usr/local/bin/

      - name: Ejecutar Gitleaks para detectar credenciales
        run: gitleaks detect --verbose --redact --source . || true  # No falla el pipeline si encuentra credenciales

  testCalidadUnitaria:
    runs-on: ubuntu-latest
    needs: gitleaks  # Se ejecuta despu√©s de gitleaks
    steps:
      - name: Checkout del c√≥digo
        uses: actions/checkout@v3
      
      - name: Instalar dependencias
        run: |
          echo "Instalando dependencias de Next.js..."
          sleep 10
          echo "Instalaci√≥n completada."

      - name: Ejecutar pruebas unitarias (Simulado)
        run: |
          echo "Ejecutando pruebas unitarias..."
          sleep 30
          echo "Todas las pruebas pasaron exitosamente."

  sonarqube:
    name: SonarQube
    runs-on: ubuntu-latest
    needs: testCalidadUnitaria
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Permite un an√°lisis m√°s profundo del historial de cambios

      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v4
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  OWASP_ZAP_SCAN:
    runs-on: ubuntu-latest
    needs: sonarqube
    steps:
      - name: Checkout del c√≥digo
        uses: actions/checkout@v3

      - name: Configurar Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Instalar pnpm
        run: npm install -g pnpm

      - name: Instalar dependencias con pnpm
        run: pnpm install

      - name: Iniciar servidor local de Next.js
        run: |
          pnpm run dev &
          npx wait-on http://localhost:5173

      - name: Ejecutar escaneo de seguridad con OWASP ZAP
        uses: zaproxy/action-full-scan@v0.12.0
        with:
          target: "http://localhost:5173"
          fail_on_warn: true  # Cambia a false si no quieres que falle en advertencias

      - name: Subir reporte de OWASP ZAP
        uses: actions/upload-artifact@v4
        with:
          name: zap-report
          path: .

  merge_devsecops_to_main:
    runs-on: ubuntu-latest
    needs: OWASP_ZAP_SCAN  # Solo se ejecuta si pasa la seguridad
    steps:
      - name: Checkout del c√≥digo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Clona todo el historial para evitar problemas de merge

      - name: Configurar identidad de GitHub Actions
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "GitHub Actions Bot"

      - name: Fusionar DevSecOps en main
        run: |
          git checkout main
          git pull origin main
          git merge --no-ff DevSecOps -m "üîÄ Merge autom√°tico de DevSecOps a main"
          git push origin main

      - name: Notificar √©xito
        if: success()
        run: echo "‚úÖ Merge exitoso de DevSecOps a main"

      - name: Notificar error
        if: failure()
        run: echo "‚ùå Error en el merge. Se requiere intervenci√≥n manual."

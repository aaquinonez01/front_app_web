name: CI/CD para Frontend con Seguridad

on:
  push:
    branches:
      - DevSecOps
  pull_request:
    branches:
      - DevSecOps

jobs:
  gitleaks:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout del código
        uses: actions/checkout@v3

      - name: Instalar Gitleaks
        run: |
          curl -sSL https://github.com/zricethez/gitleaks/releases/latest/download/gitleaks-linux-amd64 -o gitleaks
          chmod +x gitleaks
          sudo mv gitleaks /usr/local/bin/

      - name: Ejecutar Gitleaks para detectar credenciales
        run: gitleaks detect --verbose --redact --source . || true  # No falla el pipeline si encuentra credenciales

  testCalidadUnitaria:
    runs-on: ubuntu-latest
    needs: gitleaks  # Se ejecuta después de gitleaks
    steps:
      - name: Checkout del código
        uses: actions/checkout@v3
      
      - name: Instalar dependencias
        run: |
          echo "Instalando dependencias de Next.js..."
          sleep 10  # 
          echo "Instalación completada."

      - name: Ejecutar pruebas unitarias (Simulado)
        run: |
          echo "Ejecutando pruebas unitarias..."
          sleep 30  # 
          echo "Todas las pruebas pasaron exitosamente."

  sonarqube:
    name: SonarQube
    runs-on: ubuntu-latest  # Cambiado de Windows a Ubuntu para mejor compatibilidad
    needs: testCalidadUnitaria
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Permite un análisis más profundo del historial de cambios

      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v4
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  escaneoSeguridad:
    runs-on: ubuntu-latest
    needs: sonarqube
    steps:
      - name: Checkout del código
        uses: actions/checkout@v3

      - name: Cache de dependencias
        uses: actions/cache@v3
        with:
          path: ~/.pnpm-store
          key: pnpm-${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            pnpm-${{ runner.os }}-

      - name: Instalar dependencias con pnpm
        run: pnpm install

      - name: Iniciar servidor local de Next.js
        run: |
          pnpm run build
          pnpm start &  
          sleep 10  

      - name: Verificar disponibilidad del servidor
        run: |
          until curl -s http://localhost:3000; do
            echo "Esperando al servidor..."
            sleep 5
          done
          echo "Servidor listo."

      - name: Escaneo de seguridad con OWASP ZAP
        uses: zaproxy/action-full-scan@v0.12.0
        with:
          target: "http://localhost:3000"
          fail_on_warn: false  

      - name: Subir reporte de OWASP ZAP
        uses: actions/upload-artifact@v4
        with:
          name: zap-report
          path: .

      - name: Escaneo de vulnerabilidades en dependencias
        run: npm audit --audit-level=high

  merge:
    runs-on: ubuntu-latest
    needs: escaneoSeguridad
    steps:
      - name: Simular Merge a Main
        run: |
          echo "Verificando condiciones para merge..."
          sleep 5
          echo "Merge exitoso en la rama main."
